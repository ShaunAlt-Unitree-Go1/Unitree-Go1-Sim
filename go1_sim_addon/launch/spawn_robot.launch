<launch>
    <arg name="robot_name"             default="/"/> <!-- Change this for namespacing. -->
    <arg name="base_frame"             default="trunk"/> <!-- Link name of floating base. Do not touch this. -->
    <arg name="joints_map_file"        default="$(find go1_config)/config/joints/joints.yaml"/> <!--Path to list of joint names. Do not touch this. -->
    <arg name="links_map_file"         default="$(find go1_config)/config/links/links.yaml"/> <!-- Path to list of link names. Do not touch this. -->
    <arg name="gait_config_file"       default="$(find go1_config)/config/gait/gait.yaml"/>  <!-- Path to gait parameters. Do not touch this. -->
    <arg name="description_file"       default="$(find go1_description)/urdf/go1.urdf"/> <!-- Path to URDF file Do not touch this. -->
    <arg name="gazebo"                 default="true" /> <!-- Set to true during simulation. This is auto-set to true from gazebo.launch. -->
    <arg name="rviz"                   default="false"/> <!-- Set to true to run rviz in parallel. -->
    <arg name="rviz_ref_frame"         default="odom"/> <!-- Default RVIZ reference frame. -->
    <arg name="has_imu"                default="true" /> <!-- Set to true if you want to visualize robot but there's no IMU. Only useful for microcontrollers. -->
    <arg name="lite"                   default="false" />  <!-- Set to true if you're using CHAMP lite version. Only useful for microcontrollers. -->
    <arg name="close_loop_odom"        default="true" /> <!-- Set to true if you want to calculate odometry using close loop. This is auto-set to true from gazebo.launch. -->
    <arg name="publish_foot_contacts"  default="false" /> <!-- Set to true if you want the controller to publish the foot contact states. This is auto-set to false from gazebo.launch. -->
    <arg name="publish_joint_control"  default="true" /> <!-- Set to true if you want the controller to publish the joint_states topic. This is auto-set to false from gazebo.launch. -->
    <arg name="laser"                  default="sim"/> <!-- Set to the 2D LIDAR you're using. See https://github.com/chvmp/champ/tree/master/champ_bringup/launch/include/laser .-->
    <arg name="joint_controller_topic" default="joint_group_position_controller/command" /> <!-- Change to remap command topic for actuator controller (ROS control).  -->
    <arg name="hardware_connected"     default="false" /> <!-- Flag useful to launch hardware connected launch files. This auto disables publishing joint_states. -->
    <arg name="ros_control_file"       default="$(find go1_config)/config/ros_control/ros_control.yaml" /> <!-- Path to ROS Control configurations. Do not touch. -->
    <arg name="gazebo_world"           default="$(find go1_simulation)/worlds/willow_garage.world" /> <!-- Path to Gazebo world you want to load. -->
    <arg name="world_init_x"           default="0.0" /> <!-- X Initial position of the robot in Gazebo World -->
    <arg name="world_init_y"           default="0.0" /> <!-- Y Initial position of the robot in Gazebo World -->
    <arg name="world_init_z"          default="0.75" />
    <arg name="world_init_heading"     default="0.0" /> <!-- Initial heading of the robot in Gazebo World -->
    <arg name="enable_contact_sensor" default="true" />
    <arg name="respawn_controller"    default="false"/>
<!-- 
    <arg if="$(eval arg('robot_name') == '/')"  name="frame_prefix" value="" />
    <arg unless="$(eval arg('robot_name') == '/')" name="frame_prefix" value="$(arg robot_name)/" />

    <param name="robot_description"
          command="$(find xacro)/xacro '$(find go1_description)/xacro/go1.urdf.xacro'"/> -->

    <param name="use_sim_time" value="true" />

    <!-- <include file="$(find champ_bringup)/launch/bringup.launch">
        <arg name="robot_name"             value="$(arg robot_name)"/>
        <arg name="base_frame"             value="$(arg base_frame)"/>
        <arg name="joints_map_file"        value="$(arg joints_map_file)"/>
        <arg name="links_map_file"         value="$(arg links_map_file)"/>
        <arg name="gait_config_file"       value="$(arg gait_config_file)"/>
        <arg name="description_file"       value="$(arg description_file)"/>
        <arg name="has_imu"                value="$(arg has_imu)"/>
        <arg name="gazebo"                 value="$(arg gazebo)"/>
        <arg name="lite"                   value="$(arg lite)"/>
        <arg name="laser"                  value="$(arg laser)"/>
        <arg name="rviz"                   value="$(arg rviz)"/>
        <arg name="rviz_ref_frame"         value="$(arg frame_prefix)$(arg rviz_ref_frame)"/>
        <arg name="joint_controller_topic" value="$(arg joint_controller_topic)" />
        <arg name="hardware_connected"     value="$(arg hardware_connected)" />
        <arg name="publish_foot_contacts"  value="$(arg publish_foot_contacts)" />
        <arg name="publish_joint_control"  value="$(arg publish_joint_control)" />
        <arg name="close_loop_odom"        value="$(arg close_loop_odom)" />
    </include>
    
    <group if="$(arg hardware_connected)">
        <node pkg="tf2_ros" type="static_transform_publisher" name="base_link_to_laser" args="0 0 0 0 0 0 $(arg frame_prefix)base $(arg frame_prefix)laser" />
        <node pkg="tf2_ros" type="static_transform_publisher" name="base_link_to_imu"   args="0 0 0 0 0 0 $(arg frame_prefix)base $(arg frame_prefix)imu_link" />
    </group> -->

    <include file="$(find go1_simulation)/launch/bringup.launch">
        <arg name="robot_name"             value="$(arg robot_name)"/>
        <arg name="gazebo"                 value="true"/>
        <arg name="lite"                   value="$(arg lite)"/>
        <arg name="rviz"                   value="$(arg rviz)"/>
        <arg name="joint_controller_topic" value="joint_group_position_controller/command"/>
        <arg name="hardware_connected"     value="false"/>
        <arg name="publish_foot_contacts"  value="false"/>
        <arg name="close_loop_odom"        value="true"/>
    </include>

    <!-- 
    ORIGINAL
    <include file="$(find champ_gazebo)/launch/spawn_robot.launch">
        <arg name="robot_name"         value="$(arg robot_name)"/>
        <arg name="lite"               value="$(arg lite)"/>
        <arg name="ros_control_file"   value="$(arg ros_control_file)"/>
        <arg name="world_init_x"       value="$(arg world_init_x)" />
        <arg name="world_init_y"       value="$(arg world_init_y)" />
        <arg name="world_init_heading" value="$(arg world_init_heading)" />
    </include>
    
    FROM CHAMP-GAZEBO

    <group ns="$(arg robot_name)">
        <node  name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg robot_name)  
        -param robot_description -robot_namespace $(arg robot_name) 
        -x $(arg world_init_x) -y $(arg world_init_y) -z $(arg world_init_z) -Y $(arg world_init_heading)" />

        <rosparam file="$(arg ros_control_file)" command="load"/>
        <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" args="
            joint_states_controller
            joint_group_position_controller
            ">
        </node>

        <node pkg="champ_gazebo" name="contact_sensor" type="contact_sensor" output="screen"/>
    </group>
    
    -->

    <group ns="$(arg robot_name)">

        <param name="robot_description"
          command="$(find xacro)/xacro '$(find go1_description)/xacro/go1.urdf.xacro'"/>

        <node  name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg robot_name)  
        -param robot_description -robot_namespace $(arg robot_name) 
        -x $(arg world_init_x) -y $(arg world_init_y) -z $(arg world_init_z) -Y $(arg world_init_heading)" />

        <rosparam file="$(arg ros_control_file)" command="load"/>
        <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="$(arg respawn_controller)"
            output="screen" args="joint_states_controller joint_group_position_controller">
        </node>

        <node if="$(arg enable_contact_sensor)"  pkg="champ_gazebo" name="contact_sensor" type="contact_sensor" output="screen"/>
    </group>
</launch>